name: Unity Build

on:
  push:
    branches-ignore:
      - main
      - master
      - develop
  release:
    types: [ published ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.path }} / ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path: [ "AntsOrSomething" ]
        version: [ "2019.4.19f1" ]
        target: [ "StandaloneWindows64", "StandaloneLinux64", "StandaloneOSX" ]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
          submodules: true
          # fetch-depth: 0  # game-ci/unity-builder optionally needs the whole history, for auto versioning

      - name: Paths Changes Filter
        uses: dorny/paths-filter@v2.9.0
        id: changes
        with:
          initial-fetch-depth: 2
          base: '${{ github.ref }}'
          filters: |
            path:
              - '${{ matrix.path }}'
            workflow:
              - '.github/workflows/unity.yml'
        if: github.event_name != 'release'

      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          path: ${{ matrix.path }}/Library
          key: ${{ matrix.target }}-${{ matrix.path }}-${{ matrix.version }}
          restore-keys: |
            ${{ matrix.target }}-${{ matrix.path }}-
            ${{ matrix.target }}-

      - name: Unity Builder
        uses: game-ci/unity-builder@v2.0-alpha-6
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          buildName: ${{ matrix.path }}
          projectPath: ${{ matrix.path }}
          unityVersion: ${{ matrix.version }}
          targetPlatform: ${{ matrix.target }}
          # allowDirtyBuild: true  # fixes CRLF/LF conversion errors, but dirty
        if: (github.event_name == 'release' && github.event.action == 'published') || steps.changes.outputs.path == 'true' || steps.changes.outputs.workflow == 'true'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.path }}.${{ matrix.target }}
          path: build/${{ matrix.target }}
          retention-days: 28
          if-no-files-found: error
        if: (github.event_name == 'release' && github.event.action == 'published') || steps.changes.outputs.path == 'true' || steps.changes.outputs.workflow == 'true'

      - name: Zip for Release
        run: |
          cd build/
          zip -r "${{ matrix.path }}.${{ matrix.target }}.zip" "${{ matrix.target }}"
        if: github.event_name == 'release' && github.event.action == 'published'

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_name: ${{ matrix.path }}.${{ matrix.target }}.zip
          asset_path: ${{ matrix.path }}.${{ matrix.target }}.zip
          asset_content_type: application/zip
        if: github.event_name == 'release' && github.event.action == 'published'